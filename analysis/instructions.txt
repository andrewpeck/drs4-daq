-----------ANALYSIS TOOLS--------------

A working ROOT installation is required for the analysis tools

to compile the analysis object files, simply run:

make

-creates object files for ASCII2ROOT, CreatePlots, and ProcessTOF


ASCII2ROOT
-processes an ASCII data file from a paddle test simulation and creates a ROOT file. to run:

./ASCII2ROOT.out dataFile.dat dataTree.root eff=100

-the only the first argument is required. the efficiency parameter artificially changes the detector by randomly throwing out a certain percentage of photoelectrons

CreatePlots
-takes ROOT tree as input, fits and plots the data. to run:

./CreatePlots dataTree.root


ProcessTOF
-process a data file from a simulation run with the entire TOF array. does not perform full analysis of photoelectrons, but is simply used to find the acceptance of the detector. to run:

./ProcessTOF dataFile.dat

*ProcessTOF_full contains the code to fully process each PMT signal in the array as ASCII2ROOT does for an individual paddle



sigmaVsEffScript
-runs through ASCII2ROOT and CreatePlots with different effiencies and plots the resulting timing efficiences against efficiency

./sigmaVsEffScript.sh [dataFile]


ROOT
-all .C files must be run in ROOT:

root -l readTree.C tree.root

once in root, run the code in the C++ interpretor:

readTree r1
r1.Loop()

this creates an instance of the readTree class, then runs the Loop function 

to load file from root interface:
.L filename
